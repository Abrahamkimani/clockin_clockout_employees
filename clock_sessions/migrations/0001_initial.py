# Generated by Django 5.1.6 on 2025-07-20 21:03

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClockSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='session ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('disconnected', 'Disconnected'), ('auto_clocked_out', 'Auto Clocked Out'), ('cancelled', 'Cancelled')], default='active', max_length=20, verbose_name='status')),
                ('clock_in_time', models.DateTimeField(help_text='When the practitioner clocked in', verbose_name='clock in time')),
                ('clock_in_latitude', models.DecimalField(decimal_places=16, help_text='GPS latitude when clocking in', max_digits=22, verbose_name='clock in latitude')),
                ('clock_in_longitude', models.DecimalField(decimal_places=16, help_text='GPS longitude when clocking in', max_digits=22, verbose_name='clock in longitude')),
                ('clock_in_accuracy', models.FloatField(blank=True, help_text='GPS accuracy in meters when clocking in', null=True, verbose_name='clock in GPS accuracy')),
                ('clock_out_time', models.DateTimeField(blank=True, help_text='When the practitioner clocked out', null=True, verbose_name='clock out time')),
                ('clock_out_latitude', models.DecimalField(blank=True, decimal_places=16, help_text='GPS latitude when clocking out', max_digits=22, null=True, verbose_name='clock out latitude')),
                ('clock_out_longitude', models.DecimalField(blank=True, decimal_places=16, help_text='GPS longitude when clocking out', max_digits=22, null=True, verbose_name='clock out longitude')),
                ('clock_out_accuracy', models.FloatField(blank=True, help_text='GPS accuracy in meters when clocking out', null=True, verbose_name='clock out GPS accuracy')),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Total session duration in minutes', null=True, verbose_name='duration in minutes')),
                ('session_notes', models.TextField(blank=True, help_text='Notes about the session', verbose_name='session notes')),
                ('service_type', models.CharField(blank=True, choices=[('counseling', 'Counseling Session'), ('assessment', 'Assessment'), ('crisis_intervention', 'Crisis Intervention'), ('case_management', 'Case Management'), ('family_therapy', 'Family Therapy'), ('group_therapy', 'Group Therapy'), ('other', 'Other')], help_text='Type of service provided', max_length=100, verbose_name='service type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('auto_clock_out_time', models.DateTimeField(blank=True, help_text='When the session was automatically clocked out', null=True, verbose_name='auto clock out time')),
                ('auto_clock_out_reason', models.CharField(blank=True, choices=[('timeout', 'Session Timeout'), ('gps_lost', 'GPS Signal Lost'), ('internet_lost', 'Internet Connection Lost'), ('system_maintenance', 'System Maintenance')], max_length=100, verbose_name='auto clock out reason')),
                ('distance_from_client_meters', models.FloatField(blank=True, help_text='Distance from client location when clocking in', null=True, verbose_name='distance from client (meters)')),
                ('location_verified', models.BooleanField(default=False, help_text='Whether the practitioner was at the correct location', verbose_name='location verified')),
                ('requires_review', models.BooleanField(default=False, help_text='Whether this session requires supervisor review', verbose_name='requires review')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='reviewed at')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='clients.client', verbose_name='client')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clock_sessions', to=settings.AUTH_USER_MODEL, verbose_name='practitioner')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_sessions', to=settings.AUTH_USER_MODEL, verbose_name='reviewed by')),
            ],
            options={
                'verbose_name': 'Clock Session',
                'verbose_name_plural': 'Clock Sessions',
                'ordering': ['-clock_in_time'],
            },
        ),
        migrations.CreateModel(
            name='SessionLocationUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('latitude', models.DecimalField(decimal_places=16, max_digits=22, verbose_name='latitude')),
                ('longitude', models.DecimalField(decimal_places=16, max_digits=22, verbose_name='longitude')),
                ('accuracy', models.FloatField(blank=True, help_text='GPS accuracy in meters', null=True, verbose_name='GPS accuracy')),
                ('battery_level', models.IntegerField(blank=True, help_text='Device battery level percentage', null=True, verbose_name='battery level')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_updates', to='clock_sessions.clocksession', verbose_name='session')),
            ],
            options={
                'verbose_name': 'Session Location Update',
                'verbose_name_plural': 'Session Location Updates',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='clocksession',
            index=models.Index(fields=['practitioner', '-clock_in_time'], name='clock_sessi_practit_780317_idx'),
        ),
        migrations.AddIndex(
            model_name='clocksession',
            index=models.Index(fields=['client', '-clock_in_time'], name='clock_sessi_client__ab288c_idx'),
        ),
        migrations.AddIndex(
            model_name='clocksession',
            index=models.Index(fields=['status'], name='clock_sessi_status_3205b3_idx'),
        ),
        migrations.AddIndex(
            model_name='clocksession',
            index=models.Index(fields=['clock_in_time'], name='clock_sessi_clock_i_c9d1c5_idx'),
        ),
        migrations.AddIndex(
            model_name='clocksession',
            index=models.Index(fields=['requires_review'], name='clock_sessi_require_4f2eb5_idx'),
        ),
        migrations.AddIndex(
            model_name='clocksession',
            index=models.Index(fields=['session_id'], name='clock_sessi_session_050681_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionlocationupdate',
            index=models.Index(fields=['session', '-timestamp'], name='clock_sessi_session_6cbde5_idx'),
        ),
    ]
