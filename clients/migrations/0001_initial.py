# Generated by Django 5.1.6 on 2025-07-20 21:03

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, help_text='Client contact number', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('client_id', models.CharField(help_text='Unique client identifier', max_length=20, unique=True, verbose_name='client ID')),
                ('street_address', models.CharField(max_length=255, verbose_name='street address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=50, verbose_name='state')),
                ('zip_code', models.CharField(max_length=10, verbose_name='zip code')),
                ('latitude', models.DecimalField(decimal_places=16, help_text='Latitude of client location', max_digits=22, verbose_name='latitude')),
                ('longitude', models.DecimalField(decimal_places=16, help_text='Longitude of client location', max_digits=22, verbose_name='longitude')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the client is currently receiving services', verbose_name='active status')),
                ('care_level', models.CharField(choices=[('low', 'Low Intensity'), ('medium', 'Medium Intensity'), ('high', 'High Intensity'), ('crisis', 'Crisis Intervention')], default='medium', max_length=50, verbose_name='care level')),
                ('special_instructions', models.TextField(blank=True, help_text='Special instructions for practitioners visiting this client', verbose_name='special instructions')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, verbose_name='emergency contact name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='emergency contact phone')),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50, verbose_name='emergency contact relationship')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('access_instructions', models.TextField(blank=True, help_text='Instructions for accessing the client location (gate codes, etc.)', verbose_name='access instructions')),
                ('safety_notes', models.TextField(blank=True, help_text='Important safety considerations for this location', verbose_name='safety notes')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['client_id'], name='clients_cli_client__a44f5d_idx'), models.Index(fields=['last_name', 'first_name'], name='clients_cli_last_na_198e2f_idx'), models.Index(fields=['is_active'], name='clients_cli_is_acti_57c1e7_idx'), models.Index(fields=['latitude', 'longitude'], name='clients_cli_latitud_785a06_idx')],
            },
        ),
    ]
